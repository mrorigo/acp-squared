{
  "_comment": "ACP² Agent Configuration Example",
  "_description": "This file shows how to configure various ZedACP agents for use with ACP² proxy server. Copy this file to config/agents.json and modify the values for your environment.",
  "_important": "Remember to set appropriate environment variables for API keys (e.g., OPENAI_API_KEY, ANTHROPIC_API_KEY, etc.)",

  "_test_agent": {
    "_comment": "Development and testing agent - remove in production",
    "name": "test",
    "command": ["python", "tests/dummy_agent.py"],
    "api_key": "${ACP2_TEST_API_KEY}",
    "description": "Test agent for ACP² development and testing.",
    "version": "0.1.0"
  },

  "_openai_codex": {
    "_comment": "OpenAI Codex Agent - Primary development agent",
    "name": "codex-acp",
    "command": ["/usr/local/bin/codex-acp"],
    "_alternative_commands": [
      ["/Users/username/.cargo/bin/codex-acp"],
      ["/opt/homebrew/bin/codex-acp"],
      ["${HOME}/.local/bin/codex-acp"]
    ],
    "api_key": "${OPENAI_API_KEY}",
    "description": "OpenAI Codex agent for code generation and editing.",
    "version": "0.1.0"
  },

  "_anthropic_claude": {
    "_comment": "Anthropic Claude Code Agent",
    "name": "claude-code-acp",
    "command": ["/usr/local/bin/claude-code-acp"],
    "_alternative_commands": [
      ["${HOME}/.local/bin/claude-code-acp"],
      ["/opt/homebrew/bin/claude-code-acp"]
    ],
    "api_key": "${ANTHROPIC_API_KEY}",
    "description": "Anthropic Claude agent specialized for code editing and generation.",
    "version": "0.1.0"
  },

  "_google_gemini": {
    "_comment": "Google Gemini CLI Agent",
    "name": "gemini-cli",
    "command": ["/usr/local/bin/gemini-cli"],
    "_alternative_commands": [
      ["${HOME}/.local/bin/gemini-cli"],
      ["/opt/homebrew/bin/gemini-cli"]
    ],
    "api_key": "${GOOGLE_API_KEY}",
    "description": "Google Gemini agent managed via the Zed ACP adapter.",
    "version": "0.1.0"
  }
}